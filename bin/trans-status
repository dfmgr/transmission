#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="trans-status"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 031620210739-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.pro
# @License       : WTFPL
# @ReadME        : trans-status --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Tuesday, Mar 16, 2021 07:39 EDT
# @File          : trans-status
# @Description   : transmission status script.
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function file
if [ -f "$SRC_DIR/functions.bash" ]; then
  FUNCTIONS_DIR="$SRC_DIR"
  . "$FUNCTIONS_DIR/functions.bash"
elif [ -f "$HOME/.local/bin/functions.bash" ]; then
  FUNCTIONS_DIR="$HOME/.local/bin"
  . "$FUNCTIONS_DIR/functions.bash"
else
  printf "\t\t\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $FUNCTIONS_DIR"
  return 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# helper function
__version() { app_version; }
__help() {
  printf_help "Usage:  trans-status |  Show transmission status " \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
main() {
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # options
  case $1 in
  -v | --version) __version ;;
  -h | --help) __help ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Required app check
  cmd_exists --error bash || exit 1
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # begin main app
  local BLOCK="${BLOCK_BUTTON:-$1}"
  local SERVER="${TORRENT_SERVER:-localhost:9091}"
  __status() {
    local status idle percent
    status="$(transmission-remote "$SERVER" -l 2>/dev/null | grep -Ev ' ID |Sum:' || return 1)"
    idle="$(echo "$status" | grep 'Idle' || return 1)"
    percent="$(echo "$status" | grep '%' || return 1)"
    if [ -n "$idle" ] || [[ -n "$percent" ]]; then
      printf '%s%s' "$percent" "$idle" |
        sed " # This first sed command is to ensure a desirable order with sort
      s/.*Stopped.*/A/g;
      s/.*Seeding.*/Z/g;
      s/.*100%.*/N/g;
      s/.*Idle.*/B/g;
      s/.*Uploading.*/L/g;
      s/.*%.*/M/g" |
        sort -h | uniq -c | sed " # Now we replace the standin letters with icons.
        s/A/🛑/g;
        s/B/⌛️/g;
        s/L/🔼/g;
        s/M/🔽/g;
        s/N/✅/g;
        s/Z/🌱/g" | awk '{print $2, $1}' | sed -e "s/ $//g" | tr '\n' ' '
    fi
    [ -n "$idle" ] || [ -n "$percent" ] || printf "🛑"
  }
  case $BLOCK in
  1)
    myterminal -e mytorrent 2>/dev/null && exitCode=0 || exitCode=1
    ;;
  list)
    resp="$(transmission-remote "$SERVER" -l 2>/dev/null | grep -Ev ' ID |Sum:' || return 1)"
    if [[ -n "$resp" ]]; then
      echo "$resp" | sed 's|^     ||g'
    else
      return 1
    fi
    ;;
  *)
    resp="$(__status 2>/dev/null)"
    if [[ -z "$resp" ]]; then
      echo '😥'
      exitCode=1
    else
      printf '%s\n' "$resp"
      exitCode=0
    fi
    ;;
  esac
  return ${exitCode:-$?}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
